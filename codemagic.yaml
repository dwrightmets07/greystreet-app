workflows:
  ios-development:
    name: iOS Development (direct install)
    max_build_duration: 60
    environment:
      xcode: latest
      node: 20
      vars:
        BUNDLE_ID: "org.greystreet.app"
        DEVELOPMENT_TEAM: "J5K98H247G"
        IOS_WORKSPACE: "App.xcworkspace"
        IOS_SCHEME: "App"
        DEV_PROFILE_NAME: "GreyStreet_Dev_Profile"
    scripts:
      - name: Install deps, build web, sync Capacitor
        script: |
          set -e
          npm ci
          npm run build
          npx cap sync ios

      - name: Install CocoaPods
        script: |
          set -e
          cd ios/App
          pod install --repo-update

      - name: Bump build number & clean
        script: |
          set -e
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $(date -u +%Y%m%d%H%M%S)" ios/App/App/Info.plist
          cd ios/App
          xcodebuild -workspace "$IOS_WORKSPACE" -scheme "$IOS_SCHEME" -configuration Debug clean

      - name: Archive (UNSIGNED to avoid Pods signing)
        script: |
          set -euo pipefail
          cd ios/App
          xcodebuild \
            -workspace "$IOS_WORKSPACE" \
            -scheme "$IOS_SCHEME" \
            -configuration Debug \
            -destination 'generic/platform=iOS' \
            -archivePath "$PWD/build/AppDev.xcarchive" \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY="" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            SKIP_INSTALL=NO \
            archive

      - name: Export Development IPA (via xcode-project helper)
        script: |
          set -euo pipefail
          cd ios/App
          # Build IPA using Codemagic's helper, passing export options as flags (no plist)
          xcode-project build-ipa \
            --workspace "$IOS_WORKSPACE" \
            --scheme "$IOS_SCHEME" \
            --archive-flags="-destination 'generic/platform=iOS' CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY='' SKIP_INSTALL=NO PRODUCT_BUNDLE_IDENTIFIER=$BUNDLE_ID" \
            --export-options "method=development,signingStyle=manual,signingCertificate=Apple Development,teamID=$DEVELOPMENT_TEAM,provisioningProfiles.$BUNDLE_ID=$DEV_PROFILE_NAME,stripSwiftSymbols=true,compileBitcode=false,manageAppVersionAndBuildNumber=false"

          echo "=== Exported files ==="
          ls -la build/ios/ipa || true
          ls -la build || true

      - name: Sanity print (embedded profile UUID + devices)
        script: |
          set -e
          IPA_GLOB="build/ios/ipa/*.ipa"
          IPA_PATH=$(ls $IPA_GLOB | head -n 1)
          echo "IPA: $IPA_PATH"
          TMP="$(mktemp -d)"
          cp "$IPA_PATH" "$TMP/App.zip"
          unzip -q "$TMP/App.zip" -d "$TMP/unz"
          PROV="$TMP/unz/Payload/App.app/embedded.mobileprovision"
          echo "=== Dev Profile UUID ==="
          /usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< "$(security cms -D -i "$PROV")" || true
          echo "=== Provisioned Devices (first few) ==="
          /usr/libexec/PlistBuddy -c 'Print :ProvisionedDevices' /dev/stdin <<< "$(security cms -D -i "$PROV")" 2>/dev/null | head -n 20 || echo "No devices list"

    artifacts:
      - ios/App/build/ios/ipa/*.ipa
      - ios/App/build/AppDev.xcarchive
      - ios/App/build/**/*.log

    publishing:
      email:
        recipients:
          - patobrien2017@gmail.com