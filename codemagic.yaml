workflows:
  ios-adhoc:
    name: iOS Ad Hoc (direct device install)
    max_build_duration: 60
    integrations:
      app_store_connect: "ASC"
    environment:
      xcode: latest
      node: 20
      groups:
        - ios_signing1     # needs: P12_BASE64, P12_PASSWORD, PROFILE_ADHOC_BASE64
      vars:
        BUNDLE_ID: "org.greystreet.app"
        PROFILE_ADHOC_NAME: "GreyStreet_AdHoc_Profile"
        DEVELOPMENT_TEAM: "J5K98H247G"
    scripts:
      - name: Install deps & build web + sync Capacitor
        script: |
          set -e
          npm ci
          npm run build
          npx cap sync ios

      - name: Install CocoaPods
        script: |
          set -e
          cd ios/App
          pod install --repo-update

      - name: Write signing files from env (Ad Hoc)
        script: |
          set -e
          mkdir -p $CM_BUILD_DIR/signing
          if [ -z "${P12_BASE64:-}" ] || [ -z "${PROFILE_ADHOC_BASE64:-}" ]; then
            echo "ERROR: Missing P12_BASE64 or PROFILE_ADHOC_BASE64 in group ios_signing1"
            exit 1
          fi
          echo "$P12_BASE64"           | base64 --decode > $CM_BUILD_DIR/signing/cert.p12
          echo "$PROFILE_ADHOC_BASE64" | base64 --decode > $CM_BUILD_DIR/signing/${PROFILE_ADHOC_NAME}.mobileprovision

      - name: Import certificate to keychain
        script: |
          set -e
          KEYCHAIN=build.keychain
          KEYCHAIN_PATH=~/Library/Keychains/${KEYCHAIN}-db
          security create-keychain -p "" "$KEYCHAIN"
          security unlock-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings -lut 21600 "$KEYCHAIN"
          security list-keychains -s "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security import $CM_BUILD_DIR/signing/cert.p12 -k "$KEYCHAIN" -P "$P12_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"
          echo "KEYCHAIN_PATH=$KEYCHAIN_PATH" > $CM_BUILD_DIR/keychain_path.env

      - name: Install Ad Hoc profile & apply to App target (Pods stay Automatic)
        script: |
          set -e
          PROFILE_SRC="$CM_BUILD_DIR/signing/${PROFILE_ADHOC_NAME}.mobileprovision"
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp "$PROFILE_SRC" ~/Library/MobileDevice/Provisioning\ Profiles/
          TMP_PLIST="$CM_BUILD_DIR/adhoc.plist"
          security cms -D -i "$PROFILE_SRC" > "$TMP_PLIST"
          APP_ID=$(/usr/libexec/PlistBuddy -c 'Print:Entitlements:application-identifier' "$TMP_PLIST" 2>/dev/null || echo "")
          case "$APP_ID" in
            *"$BUNDLE_ID") ;;
            *) echo "ERROR: Ad Hoc profile app id ($APP_ID) doesn't match $BUNDLE_ID"; exit 1 ;;
          esac
          # Wire the profile to the App target only; Pods remain Automatic
          xcode-project use-profiles
          cd ios/App
          xcodebuild -workspace App.xcworkspace -scheme App -showBuildSettings | egrep "PRODUCT_BUNDLE_IDENTIFIER|PROVISIONING_PROFILE_SPECIFIER|CODE_SIGN_STYLE|DEVELOPMENT_TEAM" || true

      - name: Clean before build
        script: |
          set -e
          cd ios/App
          xcodebuild -workspace App.xcworkspace -scheme App -configuration Release clean

      - name: Bump build number (timestamp)
        script: |
          set -e
          BUILD_TS=$(date -u +%Y%m%d%H%M%S)
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $BUILD_TS" ios/App/App/Info.plist
          echo "CFBundleVersion set to $BUILD_TS"

      - name: Build & export Ad Hoc IPA via helper (avoids framework profile errors)
        script: |
          set -euo pipefail
          source $CM_BUILD_DIR/keychain_path.env
          cd ios/App
          # Use Codemagic helper to handle export cleanly
          xcode-project build-ipa \
            --workspace App.xcworkspace \
            --scheme App \
            --archive-flags="-destination 'generic/platform=iOS' CODE_SIGN_STYLE=Manual DEVELOPMENT_TEAM=${DEVELOPMENT_TEAM} PRODUCT_BUNDLE_IDENTIFIER=${BUNDLE_ID} CODE_SIGN_IDENTITY='Apple Distribution' OTHER_CODE_SIGN_FLAGS='--keychain $KEYCHAIN_PATH'" \
            --export-options-plist "$(cat <<'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>method</key>
              <string>ad-hoc</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>signingCertificate</key>
              <string>Apple Distribution</string>
              <key>teamID</key>
              <string>J5K98H247G</string>
              <key>provisioningProfiles</key>
              <dict>
                <key>org.greystreet.app</key>
                <string>GreyStreet_AdHoc_Profile</string>
              </dict>
              <key>manageAppVersionAndBuildNumber</key>
              <false/>
              <key>destination</key>
              <string>export</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>compileBitcode</key>
              <false/>
            </dict>
          </plist>
          EOF
          )"

      - name: Show exported files
        script: |
          set -e
          ls -la ios/App/build || true
          ls -la ios/App/build/ipa || true
          ls -la ios/App/build/export || true

    artifacts:
      - ios/App/build/**/*.ipa
      - ios/App/build/**/*.dSYM.zip

    publishing:
      email:
        recipients:
          - patobrien2017@gmail.com
