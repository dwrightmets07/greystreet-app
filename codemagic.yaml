workflows:
  ios-testflight-restore:
    name: iOS TestFlight (signed) â€“ restore
    max_build_duration: 60
    instance_type: mac_mini_m2

    environment:
      xcode: latest
      node: 20
      vars:
        BUNDLE_ID: "org.greystreet.app"
        DEVELOPMENT_TEAM: "J5K98H247G"
        IOS_WORKSPACE: "App.xcworkspace"
        IOS_SCHEME: "App"
        DIST_PROFILE_NAME: "GreyStreet_Prod_Profile"   # exact profile name in Apple Developer
      groups:
        - ios_signing              # must contain: CERT_P12_BASE64, P12_PASSWORD, DIST_PROFILE_BASE64
        - app_store_connect        # must contain: APP_STORE_APPLE_ID, ASC_API_KEY_ID, ASC_API_ISSUER_ID, ASC_API_PRIVATE_KEY

    triggering:
      events: [ push ]
      branch_patterns:
        - pattern: main
          include: true
          source: true

    scripts:
      - name: Install dependencies & sync iOS
        script: |
          set -e
          npm ci
          npm run build
          npx cap sync ios

      - name: Install CocoaPods
        script: |
          set -e
          cd ios/App
          pod install --repo-update

      - name: Write signing files from env (with checks)
        script: |
          set -euo pipefail
          mkdir -p "$CM_BUILD_DIR/secrets"
          echo "$CERT_P12_BASE64"       | base64 --decode > "$CM_BUILD_DIR/secrets/dist.p12"
          echo "$DIST_PROFILE_BASE64"   | base64 --decode > "$CM_BUILD_DIR/secrets/AppStore.mobileprovision"
          if [ ! -s "$CM_BUILD_DIR/secrets/dist.p12" ]; then echo "Missing Distribution p12"; exit 1; fi
          if [ ! -s "$CM_BUILD_DIR/secrets/AppStore.mobileprovision" ]; then echo "Missing App Store profile"; exit 1; fi
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< "$(security cms -D -i "$CM_BUILD_DIR/secrets/AppStore.mobileprovision")")
          cp "$CM_BUILD_DIR/secrets/AppStore.mobileprovision" "$HOME/Library/MobileDevice/Provisioning Profiles/$PROFILE_UUID.mobileprovision"
          echo "PROFILE_UUID=$PROFILE_UUID" >> $CM_ENV

      - name: Import certificate to keychain
        script: |
          set -e
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security import "$CM_BUILD_DIR/secrets/dist.p12" -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security
          security list-keychains -s build.keychain login.keychain
          security find-identity -v -p codesigning || true

      - name: Set unique integer build number (ASC requires integer)
        script: |
          set -e
          BUILD_NUM=$(date -u +%Y%m%d%H%M%S)
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $BUILD_NUM" ios/App/App/Info.plist

      - name: Archive (UNSIGNED to avoid Pods signing)
        script: |
          set -euo pipefail
          cd ios/App
          xcodebuild \
            -workspace "$IOS_WORKSPACE" \
            -scheme "$IOS_SCHEME" \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath "$PWD/build/App.xcarchive" \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY="" \
            PRODUCT_BUNDLE_IDENTIFIER="$BUNDLE_ID" \
            SKIP_INSTALL=NO \
            archive

      - name: Create App Store exportOptions.plist
        script: |
          set -e
          PLIST_PATH="ios/App/exportOptions.plist"
          cat > "$PLIST_PATH" <<PL
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0"><dict>
            <key>method</key><string>app-store</string>
            <key>teamID</key><string>${DEVELOPMENT_TEAM}</string>
            <key>signingStyle</key><string>manual</string>
            <key>provisioningProfiles</key><dict>
              <key>${BUNDLE_ID}</key><string>${DIST_PROFILE_NAME}</string>
            </dict>
            <key>manageAppVersionAndBuildNumber</key><false/>
            <key>stripSwiftSymbols</key><true/>
            <key>compileBitcode</key><false/>
          </dict></plist>
          PL
          plutil -lint "$PLIST_PATH"
          /usr/libexec/PlistBuddy -c 'Print' "$PLIST_PATH"

      - name: Export signed IPA
        script: |
          set -euo pipefail
          cd ios/App
          xcodebuild -exportArchive \
            -archivePath "$PWD/build/App.xcarchive" \
            -exportPath "$PWD/build/export" \
            -exportOptionsPlist "$PWD/exportOptions.plist" \
            DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" \
            "CODE_SIGN_IDENTITY=Apple Distribution" \
            "PROVISIONING_PROFILE_SPECIFIER=$DIST_PROFILE_NAME"
          ls -la "$PWD/build/export"

      - name: Upload to App Store Connect (no auto external submission)
        script: |
          set -e
          IPA="ios/App/build/export/App.ipa"
          app-store-connect publish \
            --path "$IPA" \
            --apple-id "$APP_STORE_APPLE_ID" \
            --api-key "$ASC_API_KEY_ID" \
            --api-issuer "$ASC_API_ISSUER_ID" \
            --private-key "$ASC_API_PRIVATE_KEY" \
            --submit-to-testflight false

    artifacts:
      - ios/App/build/export/*.ipa
      - ios/App/build/App.xcarchive
      - ios/App/exportOptions.plist

    publishing:
      email:
        recipients:
          - patobrien2017@gmail.com