workflows:
  ios-simulator-build:
    name: Build for iOS Simulator (Appetize)
    max_build_duration: 60
    environment:
      xcode: latest
      node: 20
    scripts:
      - name: Install deps & build web + sync Capacitor
        script: |
          set -e
          npm ci
          npm run build
          npx cap sync ios
      - name: Install CocoaPods
        script: |
          set -e
          cd ios/App
          pod install --repo-update
      - name: Build (iphonesimulator, Debug)
        script: |
          set -euo pipefail
          cd ios/App
          xcodebuild \
            -workspace App.xcworkspace \
            -scheme App \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'generic/platform=iOS Simulator' \
            -derivedDataPath $PWD/build \
            build
      - name: Zip simulator .app for Appetize
        script: |
          set -e
          APP_PATH=$(find ios/App/build -type d -name "*.app" -path "*/Build/Products/*-iphonesimulator/*" | head -n 1 || true)
          [ -z "$APP_PATH" ] && { echo "ERROR: No simulator .app found."; exit 1; }
          cd "$(dirname "$APP_PATH")"
          zip -r Appetize-sim.zip "$(basename "$APP_PATH")"
    artifacts:
      - ios/App/build/Build/Products/*-iphonesimulator/*.app
      - ios/App/build/Build/Products/*-iphonesimulator/Appetize-sim.zip

  ios-device-build:
    name: Build for iOS Device (unsigned)
    max_build_duration: 60
    environment:
      xcode: latest
      node: 20
    scripts:
      - name: Install deps & build web + sync Capacitor
        script: |
          set -e
          npm ci
          npm run build
          npx cap sync ios
      - name: Install CocoaPods
        script: |
          set -e
          cd ios/App
          pod install --repo-update
      - name: Build (iphoneos, Release) unsigned
        script: |
          set -euo pipefail
          cd ios/App
          xcodebuild \
            -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            -derivedDataPath $PWD/build \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
            build
    artifacts:
      - ios/App/build/Build/Products/Release-iphoneos/*.app

  ios-testflight:
    name: iOS TestFlight (signed)
    max_build_duration: 60
    integrations:
      app_store_connect: "ASC"   # <-- change if your ASC integration name differs
    environment:
      xcode: latest
      node: 20
      groups:
        - local_signing          # <-- must contain: P12_BASE64, P12_PASSWORD, PROFILE_BASE64
      vars:
        BUNDLE_ID: "org.greystreet.app"
        PROFILE_NAME: "GreyStreet_Prod_Profile"
        DEVELOPMENT_TEAM: "J5K98H247G"
    scripts:
      - name: Install deps & build web + sync Capacitor
        script: |
          set -e
          npm ci
          npm run build
          npx cap sync ios

      - name: Install CocoaPods
        script: |
          set -e
          cd ios/App
          pod install --repo-update

      - name: Write signing files from env
        script: |
          set -e
          mkdir -p $CM_BUILD_DIR/signing
          echo "$P12_BASE64" | base64 --decode > $CM_BUILD_DIR/signing/cert.p12
          echo "$PROFILE_BASE64" | base64 --decode > $CM_BUILD_DIR/signing/${PROFILE_NAME}.mobileprovision
          ls -la $CM_BUILD_DIR/signing

      - name: Import certificate to keychain
        script: |
          set -e
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security import $CM_BUILD_DIR/signing/cert.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security
          echo "== Code signing identities =="
          security find-identity -v -p codesigning build.keychain || true

      - name: Install provisioning profile & capture UUID
        script: |
          set -e
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $CM_BUILD_DIR/signing/${PROFILE_NAME}.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          PROFILE_PATH=$(ls ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision | head -n 1)
          PROFILE_UUID=$(security cms -D -i "$PROFILE_PATH" | /usr/libexec/PlistBuddy -c 'Print:UUID' /dev/stdin)
          echo "Using profile UUID: $PROFILE_UUID"
          echo "PROFILE_UUID=$PROFILE_UUID" > $CM_BUILD_DIR/profile_uuid.env

      - name: Debug signing (pre-archive)
        script: |
          set -e
          cd ios/App
          xcodebuild -workspace App.xcworkspace -scheme App -showBuildSettings | \
            egrep 'PRODUCT_BUNDLE_IDENTIFIER|CODE_SIGN_STYLE|CODE_SIGN_IDENTITY|DEVELOPMENT_TEAM' || true

      - name: Build signed IPA (force profile UUID + team)
        script: |
          set -euo pipefail
          source $CM_BUILD_DIR/profile_uuid.env
          cd ios/App
          xcodebuild \
            -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            -archivePath $PWD/build/App.xcarchive \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=${DEVELOPMENT_TEAM} \
            PROVISIONING_PROFILE_SPECIFIER=${PROFILE_UUID} \
            archive
          cat > $PWD/exportOptions.plist <<EOF
          {
            "method": "app-store",
            "provisioningProfiles": {
              "org.greystreet.app": "GreyStreet_Prod_Profile"
            },
            "stripSwiftSymbols": true,
            "compileBitcode": false
          }
          EOF
          xcodebuild -exportArchive \
            -archivePath $PWD/build/App.xcarchive \
            -exportOptionsPlist $PWD/exportOptions.plist \
            -exportPath $PWD/build/export

    artifacts:
      - ios/App/build/export/*.ipa

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
      email:
        recipients:
          - patobrien2017@gmail.com
